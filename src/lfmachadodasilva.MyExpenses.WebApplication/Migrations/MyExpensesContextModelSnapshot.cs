// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lfmachadodasilva.MyExpenses.Core;

namespace lfmachadodasilva.MyExpenses.WebApplication.Migrations
{
    [DbContext(typeof(MyExpensesContext))]
    partial class MyExpensesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("lfmachadodasilva.MyExpenses.Core.Models.ExpenseModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<Guid?>("GroupId");

                    b.Property<Guid?>("LabelId");

                    b.Property<string>("Name");

                    b.Property<Guid?>("PaymentId");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("LabelId");

                    b.HasIndex("PaymentId");

                    b.ToTable("Expense");
                });

            modelBuilder.Entity("lfmachadodasilva.MyExpenses.Core.Models.GroupModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("lfmachadodasilva.MyExpenses.Core.Models.LabelModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("GroupId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Label");
                });

            modelBuilder.Entity("lfmachadodasilva.MyExpenses.Core.Models.PaymentModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("GroupId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("lfmachadodasilva.MyExpenses.Core.Models.UserGroupModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("GroupId");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("UserGroup");
                });

            modelBuilder.Entity("lfmachadodasilva.MyExpenses.Core.Models.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("UserModel");
                });

            modelBuilder.Entity("lfmachadodasilva.MyExpenses.Core.Models.ExpenseModel", b =>
                {
                    b.HasOne("lfmachadodasilva.MyExpenses.Core.Models.GroupModel", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("lfmachadodasilva.MyExpenses.Core.Models.LabelModel", "Label")
                        .WithMany("Expenses")
                        .HasForeignKey("LabelId");

                    b.HasOne("lfmachadodasilva.MyExpenses.Core.Models.PaymentModel", "Payment")
                        .WithMany("Expenses")
                        .HasForeignKey("PaymentId");
                });

            modelBuilder.Entity("lfmachadodasilva.MyExpenses.Core.Models.LabelModel", b =>
                {
                    b.HasOne("lfmachadodasilva.MyExpenses.Core.Models.GroupModel", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("lfmachadodasilva.MyExpenses.Core.Models.PaymentModel", b =>
                {
                    b.HasOne("lfmachadodasilva.MyExpenses.Core.Models.GroupModel", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("lfmachadodasilva.MyExpenses.Core.Models.UserGroupModel", b =>
                {
                    b.HasOne("lfmachadodasilva.MyExpenses.Core.Models.GroupModel", "Group")
                        .WithMany("Users")
                        .HasForeignKey("GroupId");

                    b.HasOne("lfmachadodasilva.MyExpenses.Core.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
